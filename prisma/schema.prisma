generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model social_events {
  id                    Int                     @id @default(autoincrement())
  title                 String                  @db.VarChar(255)
  description           String
  avatar_image          String                  @db.VarChar(255)
  banner_image          String                  @db.VarChar(255)
  rating                Float
  type                  type
  social_event_schedule social_event_schedule[]
}

model schedules {
  id                    Int                     @id @default(autoincrement())
  datetime              DateTime
  social_event_schedule social_event_schedule[]
  type                  type                    @default(Online)
}

model social_event_schedule {
  id              Int           @id @default(autoincrement())
  social_event    social_events @relation(fields: [social_event_id], references: [id])
  schedule        schedules     @relation(fields: [schedule_id], references: [id])
  social_event_id Int
  schedule_id     Int
  remaining       Int
  enabled         Boolean       @default(true)
  orders          orders[]
}

model orders {
  id                       Int                   @id @default(autoincrement())
  user                     users                 @relation(fields: [user_id], references: [id])
  user_id                  Int
  social_event_schedule    social_event_schedule @relation(fields: [social_event_schedule_id], references: [id])
  social_event_schedule_id Int
  price                    Float
  created                  DateTime              @default(now())
}

model users {
  id         Int      @id @default(autoincrement())
  email      String   @unique @db.VarChar(255)
  name       String   @db.VarChar(255)
  age        Int
  created_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  updated_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  orders     orders[]
}

enum type {
  Online
  Offline
  Music
  Sport
  E_sports  @map("E-sports")
  Festival
}
