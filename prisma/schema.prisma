generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model event_type {
  id         Int      @id
  name       String   @unique @db.VarChar(255)
  created_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  updated_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
}

model events {
  id           Int          @id @default(autoincrement())
  title        String       @db.VarChar(255)
  description  String
  performer    String       @db.VarChar(255)
  rating       Float
  type         String       @db.VarChar(255)
  banner_image String?      @db.VarChar(255)
  avatar_image String       @db.VarChar(255)
  created_at   DateTime     @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  updated_at   DateTime     @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  user_event   user_event[]
}

model types {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
}

model user_event {
  id         Int      @id
  event_id   Int
  user_id    Int
  created_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  updated_at DateTime @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  events     events   @relation(fields: [event_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])
}

model users {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  name       String       @db.VarChar(255)
  age        Int
  created_at DateTime     @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  updated_at DateTime     @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  user_event user_event[]
}

enum type {
  Online
  Offline
  Music
  Sport
  E_sports @map("E-sports")
  Festival
}
